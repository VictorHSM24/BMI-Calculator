/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author Victor Hugo Santos de Moraes
 */
import Entities.person;
import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;

public class GUI extends javax.swing.JFrame {

    public final String numericAndSpecialCharacters = "0123456789!/@#$%¨&*(_)\\+=-?`^:><,.]/[{º}ª°|§¬¢£³²¹'";
    public final String onlyNumbersAndDot = "0123456789.";

    /**
     * Creates new form ui
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldName = new javax.swing.JTextField();
        textFieldWeight = new javax.swing.JTextField();
        textFieldHeight = new javax.swing.JTextField();
        radioButtonMale = new javax.swing.JRadioButton();
        radioButtonFemale = new javax.swing.JRadioButton();
        buttonClear = new javax.swing.JButton();
        buttonCalculate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        scrollPaneResult = new javax.swing.JScrollPane();
        textAreaResult = new javax.swing.JTextArea();
        buttonExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BMI Calculator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Info"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Enter your name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 75, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Enter your weight (kg):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 53, 0, 0);
        jPanel1.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Enter your height (cm):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 45, 0, 18);
        jPanel1.add(jLabel3, gridBagConstraints);

        textFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldNameKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 193;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 18, 0, 0);
        jPanel1.add(textFieldName, gridBagConstraints);

        textFieldWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldWeightKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 105;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 53, 0, 0);
        jPanel1.add(textFieldWeight, gridBagConstraints);

        textFieldHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldHeightKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 45, 0, 18);
        jPanel1.add(textFieldHeight, gridBagConstraints);

        radioButtonMale.setText("Male");
        radioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonMaleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 3, 15, 0);
        jPanel1.add(radioButtonMale, gridBagConstraints);

        radioButtonFemale.setText("Female");
        radioButtonFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonFemaleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 18, 15, 0);
        jPanel1.add(radioButtonFemale, gridBagConstraints);

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonCalculate.setText("Calculate");
        buttonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCalculateActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Result"));

        textAreaResult.setColumns(20);
        textAreaResult.setRows(5);
        scrollPaneResult.setViewportView(textAreaResult);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneResult)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(scrollPaneResult, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonExit)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonClear)
                .addGap(18, 18, 18)
                .addComponent(buttonCalculate)
                .addGap(260, 260, 260))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonClear)
                    .addComponent(buttonCalculate))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonExit)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(702, 537));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    person p = new person();

    String gender;
    private void radioButtonFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonFemaleActionPerformed

        gender = "Female";
        radioButtonMale.setSelected(false);

    }//GEN-LAST:event_radioButtonFemaleActionPerformed

    private void radioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonMaleActionPerformed

        gender = "Male";
        radioButtonFemale.setSelected(false);

    }//GEN-LAST:event_radioButtonMaleActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed

        textFieldName.setText("");
        textFieldWeight.setText("");
        textFieldHeight.setText("");

        radioButtonMale.setSelected(false);
        radioButtonFemale.setSelected(false);

        textAreaResult.setText("");

    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed

        System.exit(0);

    }//GEN-LAST:event_buttonExitActionPerformed

    private void buttonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCalculateActionPerformed

        textAreaResult.setText("");

        boolean nameEntered = false;
        boolean weightEntered = false;
        boolean heightEntered = false;
        boolean allTextFieldsFilled = false;
        boolean allRadioButtonsSelected = false;

        if (textFieldWeight.getText().startsWith(".")) {
            textFieldWeight.setText("0" + textFieldWeight.getText());
        }

        if (textFieldHeight.getText().startsWith(".")) {
            textFieldHeight.setText("0" + textFieldHeight.getText());
        }

        if (!textFieldName.getText().isEmpty()) {

            nameEntered = true;

        }

        if (!textFieldWeight.getText().isEmpty()) {

            weightEntered = true;

        }

        if (!textFieldHeight.getText().isEmpty()) {

            heightEntered = true;

        }

        if (nameEntered && weightEntered && heightEntered) {

            allTextFieldsFilled = true;

        } else {

            JOptionPane.showMessageDialog(null, "There are unfilled text fields!",
                    "Fill in all text fields!", JOptionPane.WARNING_MESSAGE);

        }

        if (!radioButtonMale.isSelected() && !radioButtonFemale.isSelected() && allTextFieldsFilled) {

            JOptionPane.showMessageDialog(null, "Choose an option (Male or Female)!",
                    "No option selected!", JOptionPane.WARNING_MESSAGE);

        }

        if (radioButtonMale.isSelected() || radioButtonFemale.isSelected()) {

            allRadioButtonsSelected = true;

        }

        if (allTextFieldsFilled && allRadioButtonsSelected) {

            String name = textFieldName.getText().trim();

            double weight = Double.parseDouble(textFieldWeight.getText().trim());
            double height = Double.parseDouble(textFieldHeight.getText()) / 100;

            String diagnosisDate = p.diagnosisDate();

            person p = new person(name, weight, height, diagnosisDate, gender);

            if (gender == "Male") {

                textAreaResult.append(p.BMIMale());

            } else {

                textAreaResult.append(p.BMIFemale());

            }
        }
    }//GEN-LAST:event_buttonCalculateActionPerformed

    private void textFieldNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldNameKeyTyped

        if (numericAndSpecialCharacters.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_textFieldNameKeyTyped

    boolean hasCommaTFWeight = false;
    private void textFieldWeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldWeightKeyTyped

        // 371 to 386: allows the user type only the dot as decimal separator.
        // If he type a comma, this comma will be converted into a dot.
        // If he already typed a dot and backspaced it, the if-else below
        // will check this and set the variable 'hasComma' as false to
        // allow the user type a dot again.
        //
        // (The same logic apllies to the textFieldHeightKeyTyped method).
        if (!textFieldWeight.getText().contains('.' + "")) {
            hasCommaTFWeight = false;
        }

        if (hasCommaTFWeight && evt.getKeyChar() == ',') {
            evt.consume();
        }

        if (hasCommaTFWeight && evt.getKeyChar() == '.') {
            evt.consume();
        }

        if (!hasCommaTFWeight && evt.getKeyChar() == ',' || evt.getKeyChar() == '.') {
            evt.setKeyChar('.');
            hasCommaTFWeight = true;
        }

        if (!onlyNumbersAndDot.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_textFieldWeightKeyTyped

    boolean hasCommaTFHeight = false;
    private void textFieldHeightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldHeightKeyTyped

        if (!textFieldHeight.getText().contains('.' + "")) {
            hasCommaTFHeight = false;
        }

        if (hasCommaTFHeight && evt.getKeyChar() == ',') {
            evt.consume();
        }

        if (hasCommaTFHeight && evt.getKeyChar() == '.') {
            evt.consume();
        }

        if (!hasCommaTFHeight && evt.getKeyChar() == ',' || evt.getKeyChar() == '.') {
            evt.setKeyChar('.');
            hasCommaTFHeight = true;
        }

        if (!onlyNumbersAndDot.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_textFieldHeightKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCalculate;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonExit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton radioButtonFemale;
    private javax.swing.JRadioButton radioButtonMale;
    private javax.swing.JScrollPane scrollPaneResult;
    private javax.swing.JTextArea textAreaResult;
    private javax.swing.JTextField textFieldHeight;
    private javax.swing.JTextField textFieldName;
    private javax.swing.JTextField textFieldWeight;
    // End of variables declaration//GEN-END:variables
}
